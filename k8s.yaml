#########################################################
# Common Environment variables ConfigMap
#########################################################
apiVersion: v1
kind: ConfigMap
metadata:
  name: common-env
data:
  NAMESPACE: ""
  LOGLEVEL: info
  SERVICEDIR: services
  TRANSPORTER: nats://nats:4222
---
#########################################################
# Service for Moleculer API Gateway service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: api
spec:
  selector:
    app: api
  ports:
  - port: 3000
    targetPort: 3000
---
#########################################################
# Ingress for Moleculer API Gateway
#########################################################
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  #annotations:
  #  kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: cosmo-connect.127.0.0.1.nip.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 3000
---
#########################################################
# API Gateway service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
spec:
  selector:
    matchLabels:
      app: api
  replicas: 2
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: cosmo-connect
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: api
---
#########################################################
# Planets service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: planets
spec:
  selector:
    matchLabels:
      app: planets
  replicas: 2
  template:
    metadata:
      labels:
        app: planets
    spec:
      containers:
      - name: planets
        image: cosmo-connect
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: planets
---
#########################################################
# Satellites service
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: satellites
spec:
  selector:
    matchLabels:
      app: satellites
  replicas: 2
  template:
    metadata:
      labels:
        app: satellites
    spec:
      containers:
      - name: satellites
        image: cosmo-connect
        imagePullPolicy: IfNotPresent
        envFrom:
        - configMapRef:
            name: common-env
        env:
          - name: SERVICES
            value: satellites
---
#########################################################
# NATS transporter service
#########################################################
apiVersion: v1
kind: Service
metadata:
  name: nats
spec:
  selector:
    app: nats
  ports:
  - port: 4222
    name: nats
    targetPort: 4222
---
#########################################################
# NATS transporter
#########################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nats
    spec:
      containers:
      - name: nats
        image: nats
        ports:
        - containerPort: 4222
          name: nats